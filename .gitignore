# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# IDEs
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Media files (development only - use cloud storage in production)
media/products/images/*
media/products/thumbnails/*
media/categories/*
media/banners/*
media/users/*
media/flash_sales/*
!media/products/images/.gitkeep
!media/products/thumbnails/.gitkeep
!media/categories/.gitkeep
!media/banners/.gitkeep
!media/users/.gitkeep
!media/flash_sales/.gitkeep

# Static files collected
staticfiles/
static_collected/

# Log files
logs/*.log
*.log.*

# Backup files
*.bak
*.backup
*.sql

# Secret files
secrets/
certificates/
ssl/

# Database dumps
*.dump
*.sql.gz

# Node.js (if using for frontend tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Docker
.dockerignore

# Redis dump
dump.rdb

# Celery beat schedule
celerybeat-schedule.db
celerybeat.pid

# PyCharm
.idea/

# Visual Studio Code
.vscode/

# Temporary files
tmp/
temp/
.tmp/

# Coverage reports
htmlcov/
.coverage

# pytest
.pytest_cache/

# Jupyter
.ipynb_checkpoints/

# Local environment configuration
.env.local
.env.development
.env.test
.env.production

# MacOS
.DS_Store

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini

# Linux
*~

# Editor backups
*.bak
*.swp
*.swo

# Python virtual environment
venv/
env/
.venv/
.env/

# Django migrations (optional - uncomment if you want to ignore migrations)
# */migrations/*.py
# !*/migrations/__init__.py

# Collected static files
/static/

# Media files in production should be served from cloud storage
# /media/

# Local settings that override base settings
local_settings.py

# SSL certificates
*.pem
*.key
*.crt
*.csr

# Documentation builds
docs/_build/
site/

# Translation files
*.mo

# Database files
*.sqlite3
*.db

# Cache files
.cache/

# Temporary upload files
uploads/temp/

# Test files
test_*.py
*_test.py