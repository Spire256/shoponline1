# Generated by Django 4.2.7 on 2025-08-05 20:40

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('products', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FlashSale',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this record was last updated')),
                ('is_deleted', models.BooleanField(default=False, help_text='Whether this record has been soft deleted')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='When this record was deleted', null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('draft', 'Draft')], default='active', help_text='Status of this record', max_length=20)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Flash sale name', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Flash sale description')),
                ('discount_percentage', models.DecimalField(decimal_places=2, help_text='Discount percentage (0-100)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('start_time', models.DateTimeField(help_text='Flash sale start time')),
                ('end_time', models.DateTimeField(help_text='Flash sale end time')),
                ('is_active', models.BooleanField(default=True, help_text='Whether the flash sale is active')),
                ('max_discount_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum discount amount in UGX', max_digits=12, null=True)),
                ('banner_image', models.ImageField(blank=True, help_text='Flash sale banner image', null=True, upload_to='flash_sales/banners/')),
                ('priority', models.IntegerField(default=0, help_text='Display priority (higher numbers shown first)')),
                ('created_by', models.ForeignKey(help_text='Admin who created this flash sale', on_delete=django.db.models.deletion.CASCADE, related_name='created_flash_sales', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, help_text='User who deleted this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Flash Sale',
                'verbose_name_plural': 'Flash Sales',
                'db_table': 'flash_sales',
                'ordering': ['-priority', '-start_time'],
            },
        ),
        migrations.CreateModel(
            name='FlashSaleProduct',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When this record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When this record was last updated')),
                ('is_deleted', models.BooleanField(default=False, help_text='Whether this record has been soft deleted')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='When this record was deleted', null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('draft', 'Draft')], default='active', help_text='Status of this record', max_length=20)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('custom_discount_percentage', models.DecimalField(blank=True, decimal_places=2, help_text='Custom discount for this product (overrides flash sale discount)', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('flash_sale_price', models.DecimalField(decimal_places=2, help_text='Calculated flash sale price in UGX', max_digits=12)),
                ('original_price', models.DecimalField(decimal_places=2, help_text='Original product price when added to flash sale', max_digits=12)),
                ('stock_limit', models.PositiveIntegerField(blank=True, help_text='Limited stock for flash sale (optional)', null=True)),
                ('sold_quantity', models.PositiveIntegerField(default=0, help_text='Quantity sold during flash sale')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this product is active in the flash sale')),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='added_flash_sale_products', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ForeignKey(blank=True, help_text='User who deleted this record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted', to=settings.AUTH_USER_MODEL)),
                ('flash_sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flash_sale_products', to='flash_sales.flashsale')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flash_sales', to='products.product')),
            ],
            options={
                'verbose_name': 'Flash Sale Product',
                'verbose_name_plural': 'Flash Sale Products',
                'db_table': 'flash_sale_products',
                'indexes': [models.Index(fields=['flash_sale', 'is_active'], name='flash_sale__flash_s_0c71b3_idx'), models.Index(fields=['product', 'is_active'], name='flash_sale__product_3ad6d1_idx')],
                'unique_together': {('flash_sale', 'product')},
            },
        ),
        migrations.AddIndex(
            model_name='flashsale',
            index=models.Index(fields=['is_active', 'start_time', 'end_time'], name='flash_sales_is_acti_efb2f5_idx'),
        ),
        migrations.AddIndex(
            model_name='flashsale',
            index=models.Index(fields=['priority'], name='flash_sales_priorit_f00132_idx'),
        ),
    ]
